<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- 
DON'T CHANGE THE CONTENT OF THIS COMMENT UNLESS YOU REALLY KNOW WHAT YOU ARE DOING!
[soi-toolkit.gen.version=${soitoolkitVersion}]
[soi-toolkit.gen.type=services]
[soi-toolkit.gen.createDate=${xmlTimestamp}]
[soi-toolkit.gen.artifactId=${artifactId}]
-->

<!--
2014-12-07 HD:
This pom is based on default generated pom for a mule 3.4.0-CE or 3.5.0-CE
(no difference) maven project in Anypoint Studio release oct-2014.
Soi-toolkit adjustments made for:
1. parent pom for stabilising build over time (locking down plugin versions) and specifying repositories
2. plugin behaviour specified in soi-toolkit parent pom
3. soi-toolkit dependencies
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>${superpomGroupId}</groupId>
		<artifactId>${superpomArtifactId}</artifactId>
		<version>${superpomVersion}</version>
	</parent>

	<groupId>${groupId}</groupId>
	<artifactId>${parentPom}</artifactId>
	<packaging>mule</packaging>
	<version>${version}</version>
	<name>${parentPom}</name>

	<properties>
	<% if (muleVersion.getPomSuffix().startsWith("3.4")) { %>
		<mule.version>3.4.0</mule.version>
	<% } else { %>
		<mule.version>3.5.0</mule.version>
	<% } %>
	</properties>

	<scm>
		<!-- TODO: Sample <scm>-tag, update to reflect you own environment! -->
		<connection>scm:svn:https://my-subversion-server/svn/${integrationComponentProject}/trunk</connection>
		<developerConnection>scm:svn:https://my-subversion-server/svn/${integrationComponentProject}/trunk</developerConnection>
		<url>https://my-subversion-server/svn/${integrationComponentProject}/trunk</url>
	</scm>
	
	<distributionManagement>
		<!-- TODO: Sample <distributionManagement>-tag, update to reflect you own environment! -->
		<snapshotRepository>
			<id>snapshots</id>
			<name>Snapshot Repository</name>
			<url>http://my-maven-repo-server/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>releases</id>
			<name>Release Repository</name>
			<url>http://my-maven-repo-server/repositories/releases</url>
		</repository>
	</distributionManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!--
				NOTE (ST): the m2e lifecycle-mapping is only here to support m2e in eclipse, see:
				Ref: https://www.eclipse.org/m2e/documentation/m2e-execution-not-covered.html
				Ref: http://stackoverflow.com/questions/7409823/m2e-lifecycle-mapping-not-found
				-->
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.mule.tools</groupId>
										<artifactId>maven-mule-plugin</artifactId>
										<versionRange>[1.6,)</versionRange>
										<goals>
											<goal>attach-test-resources</goal>
											<goal>filter-resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		
		<plugins>
			<plugin>
				<groupId>org.mule.tools</groupId>
				<artifactId>maven-mule-plugin</artifactId>
				<version>1.9</version>
				<extensions>true</extensions>
				<configuration>
					<copyToAppsDirectory>true</copyToAppsDirectory>
				</configuration>
			</plugin>
			<plugin>
				<!--
					TODO (ST): what does the assembly-plugin really do here?
					Can't see anything extra happening with mvn installl ...
					Ref: http://maven.apache.org/plugins/maven-assembly-plugin/descriptor-refs.html#project
				-->
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>project</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<resources>
						<resource>
							<directory>src/main/app/</directory>
						</resource>
					<resource>
                            <directory>src/main/api/</directory>
                        </resource>
                    </resources>
				</configuration>
			</plugin>
			<plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>exec-maven-plugin</artifactId>
		        <version>1.2.1</version>
		        <executions>
		          <execution>
		            <goals>
		              <goal>java</goal>
		            </goals>
		          </execution>
		        </executions>
		        <configuration>
		          <mainClass>org.mule.MuleServer</mainClass>
		          <arguments>
		            <argument>-config</argument>
					<argument>src/test/resources/mule-standalone-with-teststubs-config.xml</argument>
		          </arguments>
		        <classpathScope>test</classpathScope>
		        </configuration>
		      </plugin>

			<!-- NOTE(ST): copy production mode log4j-config into build -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-log4j-resource</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${dollarSymbol}{project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/environment</directory>
									<includes>
										<include>log4j.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
	</build>

	<!-- plugins for creating site reports -->
<!-- TODO (ST): what do we really want when it comes to reporting? -->
<!--
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.4.2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<configLocation>http://mulesoft.org/download/attachments/92/checkstyle.xml?version=1</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<targetJdk>${dollarSymbol}{jdk.version}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tags>
						<tag>TODO</tag>
						<tag>@todo</tag>
						<tag>FIXME</tag>
						<tag>@fixme</tag>
						<tag>@deprecated</tag>
					</tags>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<source>${dollarSymbol}{jdk.version}</source>
					<links>
						<link>http://java.sun.com/j2ee/1.4/docs/api</link>
						<link>http://java.sun.com/j2se/1.4.2/docs/api</link>
						<link>http://java.sun.com/j2se/1.5.0/docs/api</link>
					</links>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0-beta-2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.2</version>
			</plugin>
		</plugins>
	</reporting>
-->

	
	<dependencies>
		<!-- Soi-toolkit dependencies -->
		<dependency>
		  <groupId>org.soitoolkit.commons.components</groupId>
			<artifactId>soitoolkit-commons-mule</artifactId>
			<version>${dollarSymbol}{soitoolkit.version}</version>
		</dependency>
		<!-- NOTE (ST): st-mule-deps deprecated, declare mule-deps inline below instead -->
		<dependency>
			<groupId>org.soitoolkit.commons.poms</groupId>
			<artifactId>soitoolkit-runtime-dependencies</artifactId>
			<version>${dollarSymbol}{soitoolkit.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.soitoolkit.commons.poms</groupId>
			<artifactId>soitoolkit-test-dependencies</artifactId>
			<version>${dollarSymbol}{soitoolkit.version}</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>

		<!-- Mule Dependencies -->
		<dependency>
			<groupId>org.mule</groupId>
			<artifactId>mule-core</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Xml configuration -->
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-spring-config</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Mule Transports -->
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-file</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-http</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-jdbc</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-jms</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-vm</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- ST: added transports that generated integration test depends on (using imports) -->
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-ftp</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-sftp</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-email</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-quartz</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Mule Modules -->
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-client</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-cxf</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-jersey</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-management</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-scripting</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-sxc</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-xml</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- ST: added transports that generated code test depends on -->
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-json</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<% if (!muleVersion.getPomSuffix().startsWith("3.4")) { %>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-db</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<% } %>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-jbossts</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-apikit</artifactId>
			<version>1.5.0</version>
		</dependency>

		<!-- for testing -->
		<dependency>
			<groupId>org.mule.tests</groupId>
			<artifactId>mule-tests-functional</artifactId>
			<version>${dollarSymbol}{mule.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
