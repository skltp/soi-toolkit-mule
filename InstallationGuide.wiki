#summary Installation Guide for users of soi-toolkit.

*Content*
<wiki:toc max_depth="3" />

= Introduction =

To get started with soi-toolkit and Mule ESB you only need to install Java SE, Eclipse, Maven and the soi-toolkit Eclipse plugin. See section [#Required_installations Required installations] for instructions.

Depending on your needs you also might want to install some optional tools in your development environment such as Subversion clients, test tool for Web Services, soapUI, or setting up PKI - keys for usage with the SFTP transport. See section [#Optional_installations Optional installations] for instructions on how to install and configure these optional tools.

The installation guides below assumes your on a 32 bit Microsoft Windows PC.

==Required installations==

The following versions (or newer) are recommended:
|| *Tool* || *Version* ||
||Java SE||6 Update 21||
||Eclipse EE||3.6.1 (Helios)||
||Maven||2.2.1||
||Maven plugin for Eclipse||0.10.0||
||Soi-toolkit plugin for Eclipse||0.1.7||

*Note:* Older version such as Java SE 5 and Eclipse 3.4, 3.5 should work without any problem (even though we don't test against these versions), but we strongly recommend using Maven 2.2.1 or newer since some older versions of Maven are known to produce incorrect GPG signatures and checksums .

===Java SE===
Install Java SE according to the following instructions:

 * Download JDK for Java SE from http://java.sun.com/javase/downloads/widget/jdk6.jsp
 A file named {{{jdk-6u21-windows-i586.exe}}} is downloaded to your PC.

 * Execute the downloaded installation program and use default values for the installation of both the JDK and the JRE.

 * Create an environment variable, JAVA_HOME, in Windows that points to the installation directory. 
 E.g. {{{JAVA_HOME=C:\Program Files\Java\jdk1.6.0_21}}}

 * Add the bin-folder of the JDK to the Windows PATH-environment variable.
 E.g. {{{PATH=...;C:\Program Files\Java\jdk1.6.0_21\bin}}}

 * Verify the installation in a command window with the commands {{{java –version}}},  {{{javac –version}}} och {{{set JAVA_HOME}}}. The result should be similar to: 

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/JavaSeVerifyInstallation.png

 * For full installation instructions see [http://www.oracle.com/technetwork/java/javase/documentation/install-windows-152927.html Microsoft Windows Installation (32-bit)]

===Eclipse===

Install Eclipse according to the following instructions:

 * Download  {{{Eclipse IDE for Java EE Developers}}} from http://eclipse.org/downloads/.
 A file named {{{eclipse-jee-helios-SR1-win32.zip}}} is downloaded to your computer.

 * Unzip the zip file to the desired installation folder, eg C:\opt.

 * Create a shortcut to the file {{{eclipse.exe}}} (eg {{{C:\opt\eclipse\eclipse.exe}}}) in the installation folder to the desktop.

 * Verify the installation, start Eclipse through the desktop shortcut.
 Enter the desired workspace folder where requested and click on the "Workbench" icon (top right) when the welcome screen is presented. The the Eclipse workbench should be displayed and look like:

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/EclipseVerifyInstallation.png

===Maven===

Install Maven according to the following instructions:

 * Download Maven from http://maven.apache.org/download.html
 Download the file named {{{apache-maven-2.2.1-bin.zip}}} to your computer.

 * Unzip the zip file to the desired installation folder, eg {{{C:\opt}}}.

 * Create an environment variable, {{{M2_HOME}}}, in Windows pointing out the installation.
 For example: {{{M2_HOME=C:\opt\apache-maven-2.2.1}}}

 * Add Maven's bin folder to the Windows {{{PATH}}} variable.
 For example: {{{PATH=...;C:\opt\apache-maven-2.2.1\bin}}}

 * Verifying the installation of a command window with the command {{{mvn -v}}},
 it should produce a result like:

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/MavenVerifyInstallation.png

 * For full installation instructions see http://maven.apache.org/download.html # Installation

===Maven Eclipse plugin===

Install the Maven plugin for Eclipse according to the following instructions:

 * The installation is performed using the Eclipse "Update Site"-mechanism.
 The Update Site is: http://m2eclipse.sonatype.org/sites/m2e.
 
 For full installation instructions see http://m2eclipse.sonatype.org/installing-m2eclipse.html.

 Notes:
  * If the installation asks for approval of certificates, so be sure to select the available certificate before the next step in the installation.
  * Restart the workspace when so requested.

 * To avoid the error message {{{"The Maven Integration requires that Eclipse be running in a JDK, because a number of Maven core plugins are using jars from the JDK. (...)"}}} follow the instructions on the following page [http://tech.karolzielinski.com/m2eclipse-eclipse-is-running-in-a-jre-but-a-jdk-is-required Eclipse is running in a JRE, but a JDK is required]

===Soi-toolkit Eclipse plugin===

 * Select in the Eclipse menu "Help --> Install New Software..."

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/SoiToolkitInstallation1.png

 * Click on the "Add..." button to add the soi-toolkit update site
  * Enter "Soi-toolkit update site" in the name-field
  * Enter "http://soi-toolkit.googlecode.com/svn/eclipse-update-site/" in the location field
  * Click on the "Ok" button

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/SoiToolkitInstallation2.png

 * Allow Eclipse to process the update site

 * Expand the available selection "soi-toolkit generator" and select the "soi-toolkit generator feature"

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/SoiToolkitInstallation3.png

 * Click on the "Next >" button
 * Click on the "Next >" button again

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/SoiToolkitInstallation4.png

 * Accept the terms of the license agreement and press the "Finish" button
  * The plugin is now downloaded and installed.

 * Click on the "Ok" button when asked to accept unsigned content

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/SoiToolkitInstallation5.png

 * Click on the "Restart Now" button when asked to restart Eclipse

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/SoiToolkitInstallation6.png

 * Configure the plugin by open Eclipse Preference page in the menu and select the "SOI-Toolkit Generator"
  * Specify the folder where you have Mule installed in the field "Maven home folder"
  * Specify the default folder where the generator should create files in the field "DEfault root folder"
  * You can leave the rest of the fields as they are.
  * Click on the "OK" button to conclude the configuration.

 http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/SoiToolkitInstallation7.png

==Optional installation==

===Installing Apache ActiveMQ===
If you want to be able to perform manuel tests on your PC where JMS is involved it could be a good idea to run these tests with a external JMS provider, i.e. not a JMS provider that is embedded in Mule (as it is when you run unit tests).

Follow these instructions to install ActiveMQ locally on your PC:

 * Download ActiveMQ from http://www.apache.org/dyn/closer.cgi?path=%2Factivemq%2Fapache-activemq%2F5.3.2%2Fapache-activemq-5.3.2-bin.zip

 * Unzip to some folder, e.g. {{{C:\opt}}}

 * Go to the folder {{{C:\opt\apache-activemq-5.3.2\bin\win32}}} and execute the file {{{InstallService.bat}}}.

 Active MQ is now registered as a windows service and can be started automatically when the PC is started.
 Verify that ActiveMQ is running after the installation and start its windows service if not by:

 Open the url http://localhost:8161/admin/index.jsp in a web browser.

 A page like the following should now be displayed:
http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/ActiveMQVerifyInstallation.png

===Setup of public key cryptography for the SFTP transport===

=!!! Under construction !!!=

When using the SFTP transport it is strongly recommended to not use traditional username/passwords but instead use public key cryptography. See http://en.wikipedia.org/wiki/Public-key_cryptography for background information.

The instruction below is based on DSA keys but RSA keys can be used as well.

 * Verify proper security settings on files and folders
 Ssh is quit picky on security settings (not unexpected :-) so before trying to create keys verify the following permission settings:
  * folder .ssh: 700
  * home folder: 711
  * file authorized_keys, authorized_keys2: 600
  * private keys (id_dsa,id_rsa): 600
  * public keys (id_dsa.pub,id_rsa.pub): 644
  * Use the chmod command to correct if any file or folder is too open, e.g. {{{chmod 700 .ssh}}}.
 
 * Create a pair of private and public keys
  Execute the command {{{ssh-keygen -t dsa}}}, accept default filename and enter a proper passphrase of your selection.
  The files {{{id_dsa}}} and {{{id_dsa.pub}}} are now created in your .ssh - folder.

http://soi-toolkit.googlecode.com/svn/wiki/InstallationGuide/CreateDsaKeys.png
 
* Copy public key to remote sftp-machines
 
 * Validate setup

 * Configure default sfpt-settings in soi-toolkit source code generator

Add info both regarding setup of pki and hot to setup preferences in the doi-toolkit eclipse plugin for pki usage...


Tänk nu på att *ALDRIG* lämna ut din privata nyckel.
\\
\\
{noformat}
$ ssh-keygen -t dsa
Generating public/private dsa key pair.
Enter file in which to save the key (/cygdrive/c/Documents and Settings/df00801/.ssh/id_dsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /cygdrive/c/Documents and Settings/df00801/.ssh/id_dsa.
Your public key has been saved in /cygdrive/c/Documents and Settings/df00801/.ssh/id_dsa.pub.
The key fingerprint is: 96:80:0c:8a:5d:95:df:3d:0e:15:28:7f:05:40:c7:d7 DF00801@dse31429
{noformat}
\\
# Ändra behörighet på _.ssh_ katalogen.
\\
\\
{noformat}
$ cd ~ chmod 755 .ssh
{noformat}

h2. Publicera nyckeln på remote maskinen

# Efter att vi skapat nyckelpar så blir nästa steg blir att konfigurera remote maskinen som man vill koppla upp sig mot med sin nyckel för authentisiera. Detta görs genom att kopiera över din publika nyckel till remote maskinen. Du kan antingen kopiera över nyckeln med _ssh-copy-id_ kommandot eller manuellt.
h3. Kopiera med ssh-copy-id kommando.
Att använda ssh-copy-id kommandot förutsätter självklart att du har kommandot installera på den datorn där du vill använda det finns det inte så kan du troligtvis installera det alternativt att då gör hela manövern manuellt.
\\
\\
{noformat}
$ ssh-copy-id -i .ssh/id_dsa.pub df00801@vfin8003.volvofinans.net
df00801@vfin8003.volvofinans.net's password:
Now try logging into the machine, with "ssh 'df00801@vfin8003.volvofinans.net'", and check in:

  .ssh/authorized_keys

to make sure we haven't added extra keys that you weren't expecting.
{noformat}

h3. Kopiera manuellt.

# Kopiera över din publika nyckel till remote maskinen enligt nedan. Eftersom vi inte har nyckelhanteringen på plats än så blir vi promptade att ange lösenord.
\\
\\
{noformat}
$ scp ~/.ssh/id_dsa.pub df00801@vfin8003.volvofinans.net:
df00801@vfin8003.volvofinans.net's password:
id_dsa.pub                                                        100%  606     0.6KB/s   00:00
{noformat}
# Efter att ha kopierat över den publika nyckeln så måste vi nu {{aktivera}} den. Att aktivera nyckeln gör vi enligt följande:
\\
## Logga först in på remote maskinen
{noformat}
$ ssh df00801@vfin8003.volvofinans.net
df00801@vfin8003.volvofinans.net's password:
Last login: Wed Apr  9 15:17:12 2008 from dse31429.volvofinans.net
{noformat}
## Skapa en .ssh katalog om den inte finns
{noformat}
[df00801@vfin8003 ~]$ mkdir ~/.ssh
[df00801@vfin8003 ~]$ chmod 755 ~/.ssh
{noformat}
## Kopiera in nyckeln till till nyckelfilen och ta sedan bort nyckeln. Vi passar även på att sätta rätt behörighet på nyckelfilen.
{noformat}
[df00801@vfin8003 ~]$ cat id_dsa.pub >> ~/.ssh/authorized_keys2
[df00801@vfin8003 ~]$ chmod 600 ~/.ssh/authorized_keys2
[df00801@vfin8003 ~]$ rm id_dsa.pub
{noformat}
\\
{note:title=Viktigt om rättigheter}
För att ssh skall fungera ihop med nycklar så gäller följande:
1. Hemkatalogen får ej vara skrivbar för grupp eller public (*chmod 700 /home/df00801*)
2. Katalogen *.ssh* får ej vara skrivbar för grupp eller public (*chmod 755 \~/.ssh*)
3. Filerna *\~/.ssh/authorized_keys* och *\~/.ssh/authorized_keys2* får ej vara läs eller skrivbar för grupp eller public (*chmod 600 \~/.ssh/*\*)

{noformat}[df00801@vfin8003 ~]$ mkdir .ssh
[df00801@vfin8003 ~]$ chmod 755 ~/.ssh
[df00801@vfin8003 ~]$ chmod 600 ~/.ssh/*
{noformat}
{note}

h2. Koppla upp med nyckel

Dags att koppla upp sig mot remote maskinen. När vi nu kopplar upp oss så måste vi ange lösenordsfrasen.
{noformat}$ ssh df00801@vfin8003.volvofinans.net
Enter passphrase for key '/cygdrive/c/Documents and Settings/df00801/.ssh/id_dsa':
Last login: Wed Apr  9 15:35:24 2008 from dse31429.volvofinans.net
[df00801@vfin8003 ~]$
{noformat}